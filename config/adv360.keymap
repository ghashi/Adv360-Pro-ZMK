/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        go_to_url_in_browser: go_to_url_in_browser {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RC(K)) &kp LG(L) &kp BACKSPACE &kp LG(V) &kp ENTER>;
            label = "GO_TO_URL_IN_BROWSER";
        };

        find_file: find_file {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RC(J)) &kp LG(P) &kp LG(V)>;
            label = "FIND_FILE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE      &kp N1     &kp N2     &kp N3    &kp N4     &kp N5  &tog 1                                                                 &mo 3          &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&none          &kp Q      &kp W      &kp E     &kp R      &kp T   &kp LEFT_GUI                                                           &kp RIGHT_GUI  &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&none          &kp A      &kp S      &kp D     &kp F      &kp G   &kp LEFT_ALT    &kp LEFT_ALT  &kp ENTER        &kp RALT     &kp RCTRL  &kp LEFT_ALT   &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp BACKSPACE  &kp Z      &kp X      &kp C     &kp V      &kp B                                 &lt 6 TAB        &lt 6 GRAVE                            &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp DELETE
&mo 2          &kp LCTRL  &lt 7 TAB  &kp LEFT  &kp RIGHT          &kp LEFT_SHIFT  &kp LEFT_GUI  &lt 4 SPACE      &kp RET      &lt 4 ESC  &lt 5 SPACE            &kp DOWN  &kp UP     &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans     &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans     &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans     &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                     &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &kp KP_N0          &trans      &trans        &trans         &trans           &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1                 &kp F2                &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7      &kp F8            &kp F9      &kp F10     &kp F11       &kp F12
&kp C_BRIGHTNESS_AUTO  &kp C_BRIGHTNESS_INC  &none   &trans  &trans  &trans  &none                                       &none   &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP
&trans                 &trans                &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans      &trans            &trans      &trans      &trans        &trans
&trans                 &trans                &trans  &trans  &trans  &trans                  &trans      &trans                  &trans      &trans            &trans      &trans      &trans        &trans
&trans                 &trans                &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans              &trans            &trans      &trans      &trans        &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        apps {
            bindings = <
&trans  &trans         &trans         &trans         &trans         &trans         &trans                                      &trans             &trans         &trans         &trans             &trans           &trans            &trans
&trans  &kp LC(LA(Q))  &kp LC(LA(W))  &kp LC(LA(E))  &kp LC(LA(R))  &kp LC(LA(T))  &trans                                      &trans             &kp LC(LA(Y))  &kp LC(LA(U))  &kp LC(LA(I))      &kp LC(LA(O))    &kp LC(LA(P))     &trans
&trans  &kp LC(LA(A))  &kp LC(LA(S))  &kp LC(LA(D))  &kp LC(LA(F))  &kp LC(LA(G))  &trans  &trans  &trans      &trans  &trans  &trans             &kp LC(LA(H))  &kp LC(LA(J))  &kp LC(LA(K))      &kp LC(LA(L))    &kp LC(LA(SEMI))  &trans
&trans  &kp LC(LA(Z))  &kp LC(LA(X))  &kp LC(LA(C))  &kp LC(LA(V))  &kp LC(LA(B))                  &trans      &trans                             &kp LC(LA(N))  &kp LC(LA(M))  &kp LC(LA(COMMA))  &kp LC(LA(DOT))  &kp LC(LA(FSLH))  &trans
&trans  &trans         &trans         &trans         &trans                        &trans  &trans  &trans      &trans  &trans  &kp LA(LC(SPACE))                 &trans         &trans             &trans           &trans            &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans            &trans             &trans          &trans           &trans  &trans                                      &trans  &trans     &trans                &trans                 &trans          &trans            &trans
&trans  &trans            &trans             &kp RA(E)       &trans           &trans  &trans                                      &trans  &trans     &kp RA(U)             &kp RA(I)              &kp UNDERSCORE  &kp MINUS         &trans
&trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL       &kp PLUS          &kp EQUAL
&trans  &trans            &trans             &kp RA(C)       &trans           &trans                  &trans      &trans                  &kp RA(N)  &kp PAGE_DOWN         &kp PAGE_UP            &kp LT          &kp GREATER_THAN  &trans
&trans  &trans            &trans             &trans          &trans                   &trans  &trans  &trans      &trans  &trans  &trans             &trans                &trans                 &trans          &trans            &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans           &trans       &trans        &trans      &trans       &trans                                      &trans  &trans     &trans         &trans        &trans                &trans                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT  &trans                                      &trans  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2       &kp N3        &kp N4      &kp N5       &trans  &trans  &trans      &trans  &trans  &trans  &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &kp PLUS         &kp MINUS    &kp ASTERISK  &kp SLASH   &trans                       &trans      &trans                  &trans     &trans         &trans        &trans                &trans                 &trans
&trans  &trans           &trans       &trans        &trans                   &trans  &trans  &trans      &trans  &trans  &trans             &trans         &trans        &trans                &trans                 &trans
            >;
        };

        macros {
            bindings = <
&trans  &trans  &trans  &trans  &trans      &trans                 &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans      &trans                 &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &find_file  &go_to_url_in_browser  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans      &trans                                 &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                             &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
